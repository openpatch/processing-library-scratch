<project name="Library" default="clean" basedir="../">


    <!--
            Properties for your project should be set and modified in the
            build.properties
    file (located in the same folder as this build.xml file).

            THIS FILE SHOULD NOT BE
    EDITED, unless you know what you are doing.
            If you have recommendations for
    improvements, please let Elie know
            at prisonerjohn@gmail.com
    -->


    <property file="./resources/build.properties" />

    <description>
        ${ant.description}
    </description>


    <property name="line"
        value="------------------------------------------------------------------------------------------------" />

    <condition property="is.normal">
        <equals arg1="${project.compile}" arg2="normal" />
    </condition>


    <!-- set the OS properties -->
    <condition property="is.mac">
        <os family="mac" />
    </condition>
    <condition property="is.windows">
        <os family="windows" />
    </condition>
    <condition property="is.unix">
        <os family="unix" />
    </condition>


    <property name="project.jar.name" value="${project.name}" />
    <property name="project.src" location="src" />
    <property name="project.tmp" location="tmp" />
    <property name="project.docs" location="docs" />
    <property name="project.data" location="data" />
    <property name="project.lib" location="lib" />
    <property name="project.libs" location="libs" />
    <property name="project.bin" location="bin" />
    <property name="project.bin.data" location="${project.bin}/data" />
    <property name="project.dist" location="distribution" />
    <property name="project.dist.version" location="distribution/${project.name}-${library.version}" />
    <property name="project.dist.latest" location="distribution/${project.name}-latest" />
    <property name="install.source" location="resources/README.md" />
    <property name="install.destination" location="${project.dist.version}/README.md" />

    <taskdef resource="net/sf/antcontrib/antcontrib.properties">
        <classpath>
            <pathelement location="./resources/code/ant-contrib-1.0b3.jar" />
        </classpath>
    </taskdef>


    <path id="classpath">
        <fileset dir="${project.libs}" includes="**/*.jar" />
    </path>


    <!-- Create the time stamp -->
    <tstamp>
        <format property="date" pattern="MM/dd/yyyy" offset="0" unit="hour" />
    </tstamp>

    <target name="init">
        <echo>${line}
            Building the Processing Library ${project.name} ${library.version}
            ${line}
            src path ${project.src}
            bin path ${project.bin}
            classpath.local ${classpath.local.location}
            java version ${java.target.version}
            ${line}
        </echo>


        <mkdir dir="${project.bin}" />
        <mkdir dir="${project.libs}" />
        <mkdir dir="${project.libs}/windows-amd64" />
        <mkdir dir="${project.libs}/macos-x86_64" />
        <mkdir dir="${project.libs}/macos-aarch64" />
        <mkdir dir="${project.libs}/linux-amd64" />
        <mkdir dir="${project.libs}/linux-arm" />
        <mkdir dir="${project.libs}/linux-aarch64" />
    </target>


    <target name="library.init" depends="init">
        <echo message="init library ..." />

        <echo message="download dependencies ..." />

        <property name="jogl.url"
            value="https://download.processing.org/jogl/v2.4.0-rc-20210111y" />

        <get dest="${project.libs}" skipexisting="true">
            <url
                url="https://github.com/micycle1/processing-core-4/releases/download/4.2.1/core-4.2.1.jar" />
            <url url="${jogl.url}/gluegen-rt.jar" />
            <url url="${jogl.url}/jogl-all.jar" />
            <url
                url="https://github.com/processing/processing-sound/releases/download/v2.3.1/sound.zip" />
            <url url="https://github.com/java-native/jssc/releases/download/v2.9.4/jssc-2.9.4.jar" />
            <url url="https://repo1.maven.org/maven2/org/processing/serial/3.3.7/serial-3.3.7.jar" />

            <!-- Jackson for JSON and XML loading -->
            <url url="https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-core/2.15.2/jackson-core-2.15.2.jar" />
            <url url="https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-annotations/2.15.2/jackson-annotations-2.15.2.jar" />
            <url url="https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-databind/2.15.2/jackson-databind-2.15.2.jar" />
            <url url="https://repo1.maven.org/maven2/com/fasterxml/jackson/dataformat/jackson-dataformat-xml/2.15.2/jackson-dataformat-xml-2.15.2.jar" />
            <url url="https://repo1.maven.org/maven2/com/fasterxml/woodstox/woodstox-core/6.5.1/woodstox-core-6.5.1.jar" />
            <url url="https://repo1.maven.org/maven2/org/codehaus/woodstox/stax2-api/4.2.1/stax2-api-4.2.1.jar" />

            <url
                url="https://repo1.maven.org/maven2/com/github/davidmoten/word-wrap/0.1.12/word-wrap-0.1.12.jar" />
            <url
                url="https://repo1.maven.org/maven2/com/github/davidmoten/guava-mini/0.1.6/guava-mini-0.1.6.jar" />
        </get>

        <get dest="${project.libs}/linux-amd64" skipexisting="true">
            <url url="${jogl.url}/gluegen-rt-natives-linux-amd64.jar" />
            <url url="${jogl.url}/jogl-all-natives-linux-amd64.jar" />
        </get>

        <get dest="${project.libs}/linux-arm" skipexisting="true">
            <url
                url="${jogl.url}/gluegen-rt-natives-linux-arm.jar" />
            <url
                url="${jogl.url}/jogl-all-natives-linux-arm.jar" />
        </get>

        <get dest="${project.libs}/linux-aarch64" skipexisting="true">
            <url
                url="${jogl.url}/gluegen-rt-natives-linux-aarch64.jar" />
            <url
                url="${jogl.url}/jogl-all-natives-linux-aarch64.jar" />
        </get>

        <get dest="${project.libs}/windows-amd64" skipexisting="true">
            <url
                url="${jogl.url}/gluegen-rt-natives-windows-amd64.jar" />
            <url
                url="${jogl.url}/jogl-all-natives-windows-amd64.jar" />
        </get>

        <get dest="${project.libs}/macos-x86_64" skipexisting="true">
            <url
                url="${jogl.url}/gluegen-rt-natives-macos-x86_64.jar" />
            <url
                url="${jogl.url}/jogl-all-natives-macos-x86_64.jar" />
        </get>

        <get dest="${project.libs}/macos-aarch64" skipexisting="true">
            <url
                url="${jogl.url}/gluegen-rt-natives-macos-aarch64.jar" />
            <url
                url="${jogl.url}/jogl-all-natives-macos-aarch64.jar" />
        </get>

        <if>
            <available file="${project.libs}/sound.zip" />
            <then>
                <echo message="extracting sound jars ..." />
                <unzip src="${project.libs}/sound.zip" dest="${project.libs}" overwrite="true" />
                <move todir="${project.libs}">
                    <fileset dir="${project.libs}/sound/library">
                        <include name="*.jar" />
                    </fileset>
                </move>

                <echo message="deleting temp files ..." />
                <delete file="${project.libs}/sound.zip" />
                <delete dir="${project.libs}/sound" />
            </then>
        </if>
    </target>


    <target name="library.run" depends="library.init">
        <echo message="building library ..." />
        <antcall target="generate.structure">
            <param name="folder" value="library" />
        </antcall>
        <antcall target="compile" />
        <antcall target="generate.javadoc" />
        <antcall target="generate.jar">
            <param name="folder" value="library" />
        </antcall>
        <antcall target="generate.distribution" />
        <delete dir="${project.tmp}" />
    </target>

    <target name="generate.javadoc" if="is.normal">
        <!-- create the java reference of the Library -->
        <javadoc bottom="Scratch for Java by ${author.name}. ${library.copyright}"
            classpathref="classpath"
            destdir="${project.dist}/javadoc"
            verbose="false"
            sourcepath="${project.src}"
            doctitle="Javadocs: ${project.name}"
            public="true" version="false"
            windowtitle="Javadocs: ${project.name}">

            <link href="${javadoc.java.href}" />
            <link href="${javadoc.processing.href}" />
        </javadoc>
    </target>

    <target name="compile">
        <javac srcdir="${project.tmp}/${project.name}/src" destdir="${project.bin}"
            source="${java.target.version}"
            target="${java.target.version}" includeantruntime="false"
            excludes="examples/**"
            >
            <classpath>
                <path refid="classpath" />
            </classpath>
            <compilerarg value="-Xlint" />
        </javac>
        <copy todir="${project.bin.data}">
            <fileset dir="${project.data}" excludes="README" />
        </copy>
    </target>

    <target name="generate.jar">
        <jar jarfile="${project.tmp}/${project.name}/${folder}/${project.jar.name}-javadoc.jar"
            basedir="${project.dist}/javadoc">
            <manifest>
                <!-- Information about the program itself -->
                <attribute name="Implementation-Vendor" value="${author.name}" />
                <attribute name="Implementation-Title" value="${project.prettyName}" />
                <attribute name="Implementation-Version" value="${library.version}" />
            </manifest>
        </jar>

        <jar jarfile="${project.tmp}/${project.name}/${folder}/${project.jar.name}-sources.jar"
            basedir="${project.src}">
            <manifest>
                <!-- Information about the program itself -->
                <attribute name="Implementation-Vendor" value="${author.name}" />
                <attribute name="Implementation-Title" value="${project.prettyName}" />
                <attribute name="Implementation-Version" value="${library.version}" />
            </manifest>
        </jar>

        <jar
            jarfile="${project.tmp}/${project.name}/${folder}/${project.jar.name}-linux-amd64.jar"
            basedir="${project.bin}">
            <fileset dir="${project.dist}/javadoc" />
            <zipgroupfileset dir="${project.libs}" includes="*.jar" />
            <zipgroupfileset dir="${project.libs}/linux-amd64" includes="*.jar" />
            <manifest>
                <attribute name="Class-Path" value="${project.libs}" />
                <!-- Information about the program itself -->
                <attribute name="Implementation-Vendor" value="${author.name}" />
                <attribute name="Implementation-Title" value="${project.prettyName}" />
                <attribute name="Implementation-Version" value="${library.version}" />
            </manifest>
        </jar>

        <jar
            jarfile="${project.tmp}/${project.name}/${folder}/${project.jar.name}-linux-arm.jar"
            basedir="${project.bin}">
            <fileset dir="${project.dist}/javadoc" />
            <zipgroupfileset dir="${project.libs}" includes="*.jar" />
            <zipgroupfileset dir="${project.libs}/linux-arm" includes="*.jar" />
            <manifest>
                <attribute name="Class-Path" value="${project.libs}" />
                <!-- Information about the program itself -->
                <attribute name="Implementation-Vendor" value="${author.name}" />
                <attribute name="Implementation-Title" value="${project.prettyName}" />
                <attribute name="Implementation-Version" value="${library.version}" />
            </manifest>
        </jar>

        <jar
            jarfile="${project.tmp}/${project.name}/${folder}/${project.jar.name}-linux-aarch64.jar"
            basedir="${project.bin}">
            <fileset dir="${project.dist}/javadoc" />
            <zipgroupfileset dir="${project.libs}" includes="*.jar" />
            <zipgroupfileset dir="${project.libs}/linux-aarch64" includes="*.jar" />
            <manifest>
                <attribute name="Class-Path" value="${project.libs}" />
                <!-- Information about the program itself -->
                <attribute name="Implementation-Vendor" value="${author.name}" />
                <attribute name="Implementation-Title" value="${project.prettyName}" />
                <attribute name="Implementation-Version" value="${library.version}" />
            </manifest>
        </jar>

        <jar
            jarfile="${project.tmp}/${project.name}/${folder}/${project.jar.name}-windows-amd64.jar"
            basedir="${project.bin}">
            <zipgroupfileset dir="${project.libs}" includes="*.jar" />
            <zipgroupfileset dir="${project.libs}/windows-amd64" includes="*.jar" />
            <manifest>
                <attribute name="Class-Path" value="${project.libs}" />
                <!-- Information about the program itself -->
                <attribute name="Implementation-Vendor" value="${author.name}" />
                <attribute name="Implementation-Title" value="${project.prettyName}" />
                <attribute name="Implementation-Version" value="${library.version}" />
            </manifest>
        </jar>

        <jar
            jarfile="${project.tmp}/${project.name}/${folder}/${project.jar.name}-macos-x86_64.jar"
            basedir="${project.bin}">
            <zipgroupfileset dir="${project.libs}" includes="*.jar" />
            <zipgroupfileset dir="${project.libs}/macos-x86_64" includes="*.jar" />
            <manifest>
                <attribute name="Class-Path" value="${project.libs}" />
                <!-- Information about the program itself -->
                <attribute name="Implementation-Vendor" value="${author.name}" />
                <attribute name="Implementation-Title" value="${project.prettyName}" />
                <attribute name="Implementation-Version" value="${library.version}" />
            </manifest>
        </jar>

        <jar
            jarfile="${project.tmp}/${project.name}/${folder}/${project.jar.name}-macos-aarch64.jar"
            basedir="${project.bin}">
            <zipgroupfileset dir="${project.libs}" includes="*.jar" />
            <zipgroupfileset dir="${project.libs}/macos-aarch64" includes="*.jar" />
            <manifest>
                <attribute name="Class-Path" value="${project.libs}" />
                <!-- Information about the program itself -->
                <attribute name="Implementation-Vendor" value="${author.name}" />
                <attribute name="Implementation-Title" value="${project.prettyName}" />
                <attribute name="Implementation-Version" value="${library.version}" />
            </manifest>
        </jar>
    </target>


    <target name="generate.structure">
        <delete dir="${project.tmp}" />
        <mkdir dir="${project.tmp}" />
        <mkdir dir="${project.tmp}/${project.name}" />
        <mkdir dir="${project.tmp}/${project.name}/${folder}" />
        <mkdir dir="${project.tmp}/${project.name}/src" />
        <copy todir="${project.tmp}/${project.name}/src">
            <fileset dir="${project.src}" />
        </copy>
        <copy todir="${project.tmp}/${project.name}/${folder}">
            <fileset dir="${project.lib}" excludes="README" />
        </copy>
    </target>

    <target name="generate.distribution" if="is.normal">
        <mkdir dir="${project.dist}" />
        <delete dir="${project.dist.version}" />
        <mkdir dir="${project.dist.version}" />
        <mkdir dir="${project.dist.version}/${project.name}" />
        <move file="${project.tmp}/${project.name}" toDir="${project.dist.version}" />
        <move todir="${project.dist.version}/tmp/${project.name}">
            <fileset dir="${project.dist.version}/${project.name}" />
        </move>

        <move
            file="${project.dist.version}/tmp/${project.name}/library/${project.jar.name}-javadoc.jar"
            todir="${project.dist}" />
        <move
            file="${project.dist.version}/tmp/${project.name}/library/${project.jar.name}-sources.jar"
            todir="${project.dist}" />

        <move
            file="${project.dist.version}/tmp/${project.name}/library/${project.jar.name}-windows-amd64.jar"
            todir="${project.dist}" />
        <move
            file="${project.dist.version}/tmp/${project.name}/library/${project.jar.name}-linux-amd64.jar"
            todir="${project.dist}" />
        <move
            file="${project.dist.version}/tmp/${project.name}/library/${project.jar.name}-linux-arm.jar"
            todir="${project.dist}" />
        <move
            file="${project.dist.version}/tmp/${project.name}/library/${project.jar.name}-linux-aarch64.jar"
            todir="${project.dist}" />
        <move
            file="${project.dist.version}/tmp/${project.name}/library/${project.jar.name}-macos-x86_64.jar"
            todir="${project.dist}" />
        <move
            file="${project.dist.version}/tmp/${project.name}/library/${project.jar.name}-macos-aarch64.jar"
            todir="${project.dist}" />

        <copy file="resources/index.html" todir="${project.dist}" />

        <delete dir="${project.dist.version}" />
    </target>

    <target name="clean" depends="library.run">
        <delete dir="${project.bin}" />
        <delete dir="${project.tmp}" />
        <echo>

            ${line}
            Name ${project.name}
            Compiled ${project.compile}
            ${line}
            done, finished.
            ${line}
        </echo>
    </target>

</project>
